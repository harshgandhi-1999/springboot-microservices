spring:
  application:
    name: "gatewayserver"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:   ## to connect with discovery server (eureka server)
    gateway:
      discovery:
        locator:   ## to locate all the details of the microservices, set enabled=true
          enabled: false  # set to false for custom routing and not using default routes
          lowerCaseServiceId: true   # to accept service names with lower case
      httpclient:  # global timeout configuration ( if using circuit breaker then this configuration will be overridden by circuit breaker internal timeout)
        connect-timeout: 1000   # this is connection timeout for gateway server to connect to microservice
        response-timeout: 10s    # this is response timeout from the microservice
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

#  connect-timeout must be specified in milliseconds.
#  response-timeout must be specified as a java.time.Duration


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


info:
  app:
    name: "gatewayserver"
    description: "Eazy Bank Gateway Server Application"
    version: "1.0.0"

logging:
  level:
    com:
      eazybytes:
        gatewayserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000